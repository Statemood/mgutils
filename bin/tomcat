#! /bin/bash

# ------------------------------------------
#
# Created by Statemood, 2012.12.06 18:00
# Updated by Statemood, 2012.12.12 17:45
#            Statemood@gmail.com
#
# Project mgutils:
#    https://github.com/Statemood/mgutils
# ------------------------------------------

RUN_USER="tomcat"
APP_NAME="$1"
ARGUMENT="$2"
APP_PATH=/data/www
BACKUPDR=/data/backup/web
ERRORMSG='\033[1;41mError\033[0m'
APP_LOGS=$APP_PATH/$APP_NAME/logs/catalina.out
CBASEKEY='Dcatalina.base='

if [ "$1" != "all" ] && [ "$2" != "backup" ] || [ "$2" != "status" ]
then
    if [ ! -d "$APP_PATH/$APP_NAME" ] 
    then
        echo -e "$ERRORMSG: $APP_NAME does not exist"
        exit 1
    fi
    if [ ! -x "$APP_PATH/$APP_NAME/bin/startup.sh" ] 
    then
        echo -e "$ERRORMSG: $APP_NAME not executable"
        exit 1
    fi
fi
sucmd(){
    su - "$1" -c "$2"
}

Getid(){
    APP_PIDS=`ps aux | grep "$1" | egrep -v "grep $1|$0" | awk '{print $2}'`
}
catalinaout(){
    if [ ! -f "$APP_LOGS" ]
    then
        echo -e "$ERRORMSG: '$APP_LOGS': File not found"
        exit 1
    fi
    Tailines="$1"
    if [ -z "$Tailines" ]
    then
        tail -f $APP_LOGS
    else
        tail -$Tailines $APP_LOGS
    fi
}
start(){
    printf "Tomcat starting \033[1m%-16s\033[0m" "$APP_NAME"
    Getid "$APP_NAME"
    if [ ! -z "$APP_PIDS" ]
    then
        echo -e "$ERRORMSG: $APP_NAME already running with PID $APP_PIDS"
        exit 1
    fi
    sucmd "$RUN_USER" "cd $APP_PATH/$APP_NAME/bin;./startup.sh > /dev/null 2>&1"
    Getid "$APP_NAME"
    if [ -z "$APP_PIDS" ]
    then
        printf "\033[1;31m%16s\033[0m\n" "failed" 
    else
        printf ": PID %-8s\033[1;33m%16s\033[0m\n" "$APP_PIDS" "done" 
    fi
}

stop(){
    printf "Tomcat stopping \033[1m%-16s\033[0m" "$APP_NAME"
    Getid "$APP_NAME"
    KILLEDPID=$APP_PIDS
    if [ -z "$APP_PIDS" -a "$ARGUMENT" != "restart" ]
    then
        echo -e "$ERRORMSG: $APP_NAME not running"
        exit 1
    else
        if [ -z "$APP_PIDS" ]
        then
            NOT_RUN=1
        fi
    fi
    sucmd "$RUN_USER" "$APP_PATH/$APP_NAME/bin/shutdown.sh > /dev/null 2>&1"
    sleep 1
    Getid "$APP_NAME"
    if [ ! -z "$APP_PIDS" ]
    then
        kill -9 "$APP_PIDS"
    fi
    Getid "$APP_NAME"
    if [ -z "$APP_PIDS" ]
    then
        if [ "$NOT_RUN" = 1 ]
        then
            printf ": Not running\n"
        else
            printf ": PID %-8s\033[1;33m%16s\033[0m\n" "$KILLEDPID" "done"
        fi
    else
        echo -e "\033[1;31mfailed\033[0m"
    fi
}

status(){
    VER_NAME="`$APP_PATH/$APP_NAME/bin/version.sh | grep 'Server version: ' | awk -F ': ' '{print $2}'`"
    printf "$VER_NAME \033[1m$APP_NAME\033[0m status: "
    Getid "$APP_NAME"
    if [ -z "$APP_PIDS" ]
    then
        echo -e "Not running"
    else
        echo -e "Running with PID $APP_PIDS"
    fi
}
ListRunning(){
    ps aux | egrep "$RUN_USER|$APP_PATH|$CBASEKEY" | grep "$CBASEKEY" | awk -F "$CBASEKEY" '{print $2}' | \
             awk '{print $1}' | grep -v '{print' | sort | uniq | sed '/^$/d'
}
backup(){
    Backup_Time=`date +%F_%H.%M.%S`
    Backup_Save=$BACKUPDR/$APP_NAME/`date +%F`
    Backup_Name=$Backup_Save/${APP_NAME}_${Backup_Time}.tgz
    
    if [ ! -d "$Backup_Save" ]
    then
        mkdir -p $Backup_Save
    fi
    if [ -d "$APP_PATH/$APP_NAME/webapps" ]
    then
        tar zcfP $Backup_Name $APP_PATH/$APP_NAME/webapps
        if [ -f "$Backup_Name" ]
        then
            Backup_Size=`du -h $Backup_Name | awk '{print $1}'`
            echo -e "$BACKUPDR/\033[1;35m$APP_NAME\033[0m/`date +%F`/${APP_NAME}_${Backup_Time}.tgz saved(\033[1m$Backup_Size\033[0m)"
        fi
    else
        echo -e "$ERRORMSG: $APP_PATH/$APP_NAME/webapps: Not found"
        exit 1
    fi
    if [ -d "$(dirname $Backup_Save)/`date -d '15 days ago' +%F`" ]
    then
        rm -rf $(dirname $Backup_Save)/`date -d '15 days ago' +%F`
    fi
}

case "$2" in
    log)
        catalinaout "$3";;
    stop)
        stop;;
    start)
        start;;
    status)
        if [ "$1" = "all" ]
        then
            for Web in `ListRunning`
            do
                APP_NAME="$(basename $Web)" 
                status
            done
        else
            status
        fi
        ;;
    backup)
        if [ "$1" = "all" ]
        then
            for Web in `ListRunning`
            do
                APP_NAME="$(basename $Web)" 
                backup
            done
        else
            backup
        fi
        ;;
    restart)
        stop
        start
        ;;
esac
